#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
#+options: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+options: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t tags:t
#+options: tasks:t tex:t timestamp:t title:t toc:nil todo:t |:t
#+title: README
#+date: <2022-08-22 Mon>
#+author: Gergely Szabo
#+email: gergely.szabo@origoss.com
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 28.1 (Org mode 9.5.2)
#+cite_export:

#+PROPERTY: header-args:bash :results output :var VERSION="0.0.1"

* Build image

You can manually build the Docker image with the following command:

#+begin_src bash
  docker buildx build . -t muehlemannpopp/gke-deploy-tools:latest \
         --build-arg KUSTOMIZE_VERSION=4.5.7 \
         --build-arg SOPS_VERSION=3.7.3      \
         --build-arg HELM_VERSION=3.10.0
#+end_src

* Push image

#+begin_src bash
  docker tag muehlemannpopp/gke-deploy-tools:latest \
         muehlemannpopp/gke-deploy-tools:403.0.0
  docker push muehlemannpopp/gke-deploy-tools:403.0.0
  docker push muehlemannpopp/gke-deploy-tools:latest
#+end_src

* Checking the version of the dependencies

** Google Cloud SDK

The latest base image version can be checked here:

https://hub.docker.com/r/google/cloud-sdk/tags

#+name: get-cloud-sdk-tags
#+begin_src restclient :exports none :results value
  GET https://registry.hub.docker.com/v2/repositories/google/cloud-sdk/tags
#+end_src

#+name: get-latest-cloud-sdk-tag
#+begin_src elisp :var tags=get-cloud-sdk-tags() :results output raw :exports results
  (let-alist (seq-find (lambda (tag-data)
                         (string-suffix-p "-alpine" (alist-get 'name tag-data)))
                       (alist-get 'results (json-read-from-string tags)))
    (princ (format "Latest alpine image tag is =%s= updated at /%s/.\n\nThe digest is =%s=."
                   .name
                   .last_updated
                   .digest)))
#+end_src

#+RESULTS: get-latest-cloud-sdk-tag
Latest alpine image tag is =403.0.0-alpine= updated at /2022-09-23T15:06:30.03001Z/.

The digest is =sha256:3791683bade5ec26f37527d09cd531a617c0fb96da89154eb2b0484c97020f4a=.

** Kustomize

The latest ~kustomize~ version can be checked here:

https://github.com/kubernetes-sigs/kustomize/releases

#+name: get-github-releases
#+begin_src restclient :exports none :results value :var repo="kubernetes-sigs/kustomize"
  GET https://api.github.com/repos/:repo/releases
  Accept: application/vnd.github+json
  User-Agent: emacs-org-mode
#+end_src

#+name: get-latest-kustomize-release
#+begin_src elisp :var releases=get-github-releases(repo="kubernetes-sigs/kustomize") :results output raw :exports results
  (let-alist (seq-find (lambda (release-data)
                         (string-prefix-p "kustomize" (alist-get 'name release-data)))
                       (json-read-from-string releases))
    (princ (format "Latest kustomize release is =%s= published at /%s/."
                   .name
                   .published_at)))
#+end_src

#+RESULTS: get-latest-kustomize-release
Latest kustomize release is =kustomize/v4.5.7= published at /2022-08-02T16:39:10Z/.

** Sops

The latest ~sops~ version can be checked here:

https://github.com/mozilla/sops/releases

#+name: get-latest-sops-release
#+begin_src elisp :var releases=get-github-releases(repo="mozilla/sops") :results output raw :exports results
  (let-alist (seq-find (lambda (release-data)
                         (string-prefix-p "v" (alist-get 'name release-data)))
                       (json-read-from-string releases))
    (princ (format "Latest sops release is =%s= published at /%s/."
                   .name
                   .published_at)))
#+end_src

#+RESULTS: get-latest-sops-release
Latest sops release is =v3.7.3= published at /2022-05-09T17:37:50Z/.

** Helm

The latest ~Helm~ version can be checked here:

https://github.com/helm/helm/releases

#+name: get-latest-helm-release
#+begin_src elisp :var releases=get-github-releases(repo="helm/helm") :results output raw :exports results
  (let-alist (seq-find (lambda (release-data)
                         (string-prefix-p "Helm" (alist-get 'name release-data)))
                       (json-read-from-string releases))
    (princ (format "Latest Helm release is =%s= published at /%s/."
                   .name
                   .published_at)))
#+end_src

#+RESULTS: get-latest-helm-release
Latest Helm release is =Helm 3.10.0= published at /2022-09-21T17:32:35Z/.
