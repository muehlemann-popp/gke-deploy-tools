#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
#+options: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+options: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t tags:t
#+options: tasks:t tex:t timestamp:t title:t toc:nil todo:t |:t
#+title: README
#+date: <2022-08-22 Mon>
#+author: Gergely Szabo
#+email: gergely.szabo@origoss.com
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 28.1 (Org mode 9.5.2)
#+cite_export:

#+PROPERTY: header-args:bash :results output :var VERSION="0.0.1"

* Build image

You can manually build the Docker image with the following command:

#+begin_src bash :eval never
  docker buildx build . -t muehlemannpopp/gke-deploy-tools:latest \
         --build-arg KUSTOMIZE_VERSION=4.5.7 \
         --build-arg SOPS_VERSION=3.7.3      \
         --build-arg HELM_VERSION=3.10.1
#+end_src

* Push image

#+begin_src bash :eval never
  docker tag muehlemannpopp/gke-deploy-tools:latest \
         muehlemannpopp/gke-deploy-tools:405.0.1
  docker push muehlemannpopp/gke-deploy-tools:405.0.1
  docker push muehlemannpopp/gke-deploy-tools:latest
#+end_src

* Dependency versions

#+tblname: dependency-versions
#+caption: Depency versions
| dependency   | version          | last updated                | digest                                                                  |
|--------------+------------------+-----------------------------+-------------------------------------------------------------------------|
| google-cloud | 406.0.0-alpine   | 2022-10-18T02:21:27.445207Z | sha256:f50a39bf88bccb033af6ee606340456754f7f78b00b89f087cf8e66a258b8379 |
| kustomize    | kustomize/v4.5.7 | 2022-08-02T16:39:10Z        |                                                                         |
| sops         | v3.7.3           | 2022-05-09T17:37:50Z        |                                                                         |
| Helm         | Helm 3.10.1      | 2022-10-12T20:51:20Z        |                                                                         |
#+TBLFM: @2$2='(org-sbe get-latest-cloud-sdk-tag (field 'name))::@2$3='(org-sbe get-latest-cloud-sdk-tag (field 'last_updated))::@2$4='(org-sbe get-latest-cloud-sdk-tag (field 'digest))::@3$2='(org-sbe get-latest-kustomize-release (field 'name))::@3$3='(org-sbe get-latest-kustomize-release (field 'published_at))::@4$2='(org-sbe get-latest-sops-release (field 'name))::@4$3='(org-sbe get-latest-sops-release (field 'published_at))::@5$2='(org-sbe get-latest-helm-release (field 'name))::@5$3='(org-sbe get-latest-helm-release (field 'published_at))

** Google Cloud SDK

The latest base image version can be checked here:

https://hub.docker.com/r/google/cloud-sdk/tags

#+name: get-cloud-sdk-tags
#+begin_src restclient :exports none :results value
  GET https://registry.hub.docker.com/v2/repositories/google/cloud-sdk/tags
#+end_src

#+name: get-latest-cloud-sdk-tag
#+begin_src elisp :var tags=get-cloud-sdk-tags() :var field='name :results value :exports none
  ;; supported fields: name, last_updated, digest
  (let ((tag-data (seq-find (lambda (tag-data)
                              (string-suffix-p "-alpine" (alist-get 'name tag-data)))
                            (alist-get 'results (json-read-from-string tags)))))
    (alist-get field tag-data))
#+end_src

** Kustomize

The latest ~kustomize~ version can be checked here:

https://github.com/kubernetes-sigs/kustomize/releases

#+name: get-github-releases
#+begin_src restclient :exports none :results value :var repo="kubernetes-sigs/kustomize"
  GET https://api.github.com/repos/:repo/releases
  Accept: application/vnd.github+json
  User-Agent: emacs-org-mode
#+end_src

#+name: get-latest-kustomize-release
#+begin_src elisp :var releases=get-github-releases(repo="kubernetes-sigs/kustomize") :var field='name :results value :exports none
  ;; supported fields: name, published_at
  (let ((tag-data (seq-find (lambda (release-data)
                              (string-prefix-p "kustomize" (alist-get 'name release-data)))
                            (json-read-from-string releases))))
    (alist-get field tag-data))
#+end_src

** Sops

The latest ~sops~ version can be checked here:

https://github.com/mozilla/sops/releases

#+name: get-latest-sops-release
#+begin_src elisp :var releases=get-github-releases(repo="mozilla/sops") :var field='name :results value :exports none
  ;; supported fields: name, published_at
  (let ((tag-data (seq-find (lambda (release-data)
                              (string-prefix-p "v" (alist-get 'name release-data)))
                            (json-read-from-string releases))))
    (alist-get field tag-data))
#+end_src

** Helm

The latest ~Helm~ version can be checked here:

https://github.com/helm/helm/releases

#+name: get-latest-helm-release
#+begin_src elisp :var releases=get-github-releases(repo="helm/helm") :var field='name :results value :exports none
  ;; supported fields: name, published_at
  (let ((tag-data (seq-find (lambda (release-data)
                              (string-prefix-p "Helm" (alist-get 'name release-data)))
                            (json-read-from-string releases))))
    (alist-get field tag-data))
#+end_src

# Local Variables:
# org-confirm-babel-evaluate: nil
# org-export-babel-evaluate: nil
# End:
