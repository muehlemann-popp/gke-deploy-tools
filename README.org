
#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
#+options: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+options: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t tags:t
#+options: tasks:t tex:t timestamp:t title:t toc:nil todo:t |:t
#+title: README
#+date: <2022-08-22 Mon>
#+author: Gergely Szabo
#+email: gergely.szabo@origoss.com
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 28.1 (Org mode 9.5.2)
#+cite_export:

#+PROPERTY: header-args:bash :results output :var VERSION="0.0.1"

* Build image

You can manually build the Docker image with the following command:

#+begin_src bash :eval never
  docker buildx build . -t muehlemannpopp/gke-deploy-tools:latest \
         --build-arg KUSTOMIZE_VERSION=4.5.7 \
         --build-arg SOPS_VERSION=3.7.3      \
         --build-arg HELM_VERSION=3.11.1
#+end_src

* Push image

#+begin_src bash :eval never
  docker tag muehlemannpopp/gke-deploy-tools:latest \
         muehlemannpopp/gke-deploy-tools:418.0.0
  docker push muehlemannpopp/gke-deploy-tools:418.0.0
  docker push muehlemannpopp/gke-deploy-tools:latest
#+end_src

* Dependency versions

#+tblname: dependency-versions
#+name: dependency-versions
#+caption: Dependency versions
| dependency   |        version | last updated               | digest                                                                  |
|--------------+----------------+----------------------------+-------------------------------------------------------------------------|
| google-cloud | 419.0.0-alpine | 2023-02-22T16:13:06.29934Z | sha256:e8c6e1e5831b850b33ae5454763300df0617bc8c758b7fcbb979e9e1d6ddb1f8 |
| kustomize    |          5.0.0 | 2023-02-02T17:19:31Z       |                                                                         |
| sops         |          3.7.3 | 2022-05-09T17:37:50Z       |                                                                         |
| Helm         |         3.11.1 | 2023-02-08T18:02:00Z       |                                                                         |
#+TBLFM: @2$2='(org-sbe get-latest-cloud-sdk-tag (field 'name))::@2$3='(org-sbe get-latest-cloud-sdk-tag (field 'last_updated))::@2$4='(org-sbe get-latest-cloud-sdk-tag (field 'digest))::@3$2='(org-sbe get-latest-kustomize-release (field 'name) (matcher "\"kustomize/v\\\\(.*\\\\)$\""))::@3$3='(org-sbe get-latest-kustomize-release (field 'published_at))::@4$2='(org-sbe get-latest-sops-release (field 'name) (matcher "\"v\\\\(.*\\\\)$\""))::@4$3='(org-sbe get-latest-sops-release (field 'published_at))::@5$2='(org-sbe get-latest-helm-release (field 'name) (matcher "\"Helm v\\\\(.*\\\\)$\""))::@5$3='(org-sbe get-latest-helm-release (field 'published_at))

** Generate Dockerfile                                             :noexport:

#+begin_src bash :results output :var CLOUD_SDK_BASE_IMAGE=(org-table-get-remote-range "dependency-versions" "@2$2") :var CLOUD_SDK_BASE_IMAGE_HASH=(org-table-get-remote-range "dependency-versions" "@2$4") :var KUSTOMIZE_VER=(org-table-get-remote-range "dependency-versions" "@3$2") :var SOPS_VER=(org-table-get-remote-range "dependency-versions" "@4$2") :var HELM_VER=(org-table-get-remote-range "dependency-versions" "@5$2"))
  echo "base image=${CLOUD_SDK_BASE_IMAGE}:${CLOUD_SDK_BASE_IMAGE_HASH}"
  echo "kustomize=${KUSTOMIZE_VER}"
  echo "sops=${SOPS_VER}"
  echo "helm=${HELM_VER}"
  export CLOUD_SDK_BASE_IMAGE
  export CLOUD_SDK_BASE_IMAGE_HASH
  export KUSTOMIZE_VER
  export SOPS_VER
  export HELM_VER
  dockerfile-generator
#+end_src

#+RESULTS:
: base image=419.0.0-alpine:sha256:e8c6e1e5831b850b33ae5454763300df0617bc8c758b7fcbb979e9e1d6ddb1f8
: kustomize=5.0.0
: sops=3.7.3
: helm=3.11.1

** Google Cloud SDK

The latest base image version can be checked here:

https://hub.docker.com/r/google/cloud-sdk/tags

#+name: get-cloud-sdk-tags
#+begin_src restclient :exports none :results value
  GET https://registry.hub.docker.com/v2/repositories/google/cloud-sdk/tags
#+end_src

#+name: get-latest-cloud-sdk-tag
#+begin_src elisp :var tags=get-cloud-sdk-tags() :var field='name :var matcher='nil :results value :exports none
  ;; supported fields: name, last_updated, digest
  (let* ((tag-data (seq-find (lambda (tag-data)
			       (string-suffix-p "-alpine" (alist-get 'name tag-data)))
			     (alist-get 'results (json-read-from-string tags))))
	 (field-tag-data (alist-get field tag-data)))
    (if matcher
	(progn
	  (string-match matcher field-tag-data)
	  (match-string 0))
	field-tag-data))
#+end_src

** Kustomize

The latest ~kustomize~ version can be checked here:

https://github.com/kubernetes-sigs/kustomize/releases

#+name: get-github-releases
#+begin_src restclient :eval never-export :exports none :results value :var repo="kubernetes-sigs/kustomize"
  GET https://api.github.com/repos/:repo/releases
  Accept: application/vnd.github+json
  User-Agent: emacs-org-mode
#+end_src

#+name: get-latest-kustomize-release
#+begin_src elisp :eval never-export :var releases=get-github-releases(repo="kubernetes-sigs/kustomize") :var field='name :var matcher="\\(.*\\)" :results value :exports none
  ;; supported fields: name, published_at
  (let* ((tag-data (seq-find (lambda (release-data)
			       (string-prefix-p "kustomize" (alist-get 'name release-data)))
			     (json-read-from-string releases)))
	 (field-tag-data (alist-get field tag-data)))
    (string-match matcher field-tag-data)
    (match-string 1 field-tag-data))
#+end_src

** Sops

The latest ~sops~ version can be checked here:

https://github.com/mozilla/sops/releases

#+name: get-latest-sops-release
#+begin_src elisp :exports none :eval never-export :var releases=get-github-releases(repo="mozilla/sops") :var field='name :var matcher="\\(.*\\)" :results value
  ;; supported fields: name, published_at
  (let* ((tag-data (seq-find (lambda (release-data)
			       (string-prefix-p "v" (alist-get 'name release-data)))
			     (json-read-from-string releases)))
	(field-tag-data (alist-get field tag-data)))
    (string-match matcher field-tag-data)
    (match-string 1 field-tag-data))
#+end_src

** Helm

The latest ~Helm~ version can be checked here:

https://github.com/helm/helm/releases

#+name: get-latest-helm-release
#+begin_src elisp :eval never-export :var releases=get-github-releases(repo="helm/helm") :var field='name :var matcher="\\(.*\\)" :results value :exports none
  ;; supported fields: name, published_at
  (let* ((tag-data (seq-find (lambda (release-data)
			       (string-prefix-p "Helm" (alist-get 'name release-data)))
			     (json-read-from-string releases)))
	 (field-tag-data (alist-get field tag-data)))
    (string-match matcher field-tag-data)
    (match-string 1 field-tag-data))
#+end_src

# Local Variables:
# org-confirm-babel-evaluate: nil
# End:
